<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>随笔 on 脚踏实地</title>
    <link>http://localhost:1313/tags/%E9%9A%8F%E7%AC%94/</link>
    <description>Recent content in 随笔 on 脚踏实地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 24 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E9%9A%8F%E7%AC%94/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integer == int？揭秘包装类比较陷阱</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-int-equals-new-integer/</link>
      <pubDate>Mon, 24 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-int-equals-new-integer/</guid>
      <description>当你在Java中写下Integer a = 12;和int b = 12;时，就像是给同一个数字穿上了不同的衣服，一个穿着对象的外套，一个保持着原始数据的质朴。 但它们的比较</description>
    </item>
    <item>
      <title>深度解析new String(“abc”)的对象创建机制</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-new-string-object/</link>
      <pubDate>Sun, 23 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-new-string-object/</guid>
      <description>核心结论 创建对象数：2 个（当字符串常量池不存在 &amp;ldquo;abc&amp;rdquo; 时）。 第一个对象是&amp;quot;abc&amp;quot;，它属于字符串字面量，因此编译时期会在字符串常量池中创建一个字符</description>
    </item>
    <item>
      <title>Java编译器的「消失魔术」</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-generics-impl/</link>
      <pubDate>Sat, 22 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-generics-impl/</guid>
      <description>代码世界的&amp;quot;智能分类器&amp;quot; 你有一个神奇的盒子，它能自动识别放入的物品类型。泛型就像这个盒子的标签系统： 没有泛型：盒子是个&amp;quot;杂物箱&amp;q</description>
    </item>
    <item>
      <title>Java世界的「X光透视机」</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-reflection-scene/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-reflection-scene/</guid>
      <description>什么是反射 想象你走进一个神秘房间，房间里摆满了上锁的宝箱。正常情况下你需要对应的钥匙才能打开每个箱子，但突然你获得了一个万能开锁器，这个“万能开锁器”就类似于是</description>
    </item>
    <item>
      <title>Java字符串到底能有多长</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-string-howlong/</link>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-string-howlong/</guid>
      <description>编译期 在编写代码时，直接写在代码里的字符串（硬编码字符串）有一个长度限制。 具体来说，字符串的最大长度不能超过65534个字符。如果超过这个限制，编译器会报错。 当</description>
    </item>
    <item>
      <title>为什么Java的String一出生就「不可变」</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-string-final/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-string-final/</guid>
      <description>作为Java开发者，你一定每天都在和String打交道，但你有没有想过：为什么Java的String类被设计成不可变的？ 这个看似简单的设定，背后竟隐藏着语言设计</description>
    </item>
    <item>
      <title>Java对象复制：深拷贝 vs 浅拷贝</title>
      <link>http://localhost:1313/posts/java/javasmallclass/java-object-replication/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javasmallclass/java-object-replication/</guid>
      <description>如何复制对象 在实际开发过程中，对象的复制与转换是非常常见且重要的操作。这类操作通常出现在不同层之间的数据传递或转换中，例如将数据传输对象（DTO）转换为持久化对</description>
    </item>
    <item>
      <title>GitHub Pages自定义域名配置</title>
      <link>http://localhost:1313/posts/essays/github-domain/</link>
      <pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/essays/github-domain/</guid>
      <description>域名注册 国内申请需要进行实名认证和备案。国内常见域名服务商：阿里、华为、腾讯。国际平台（免备案）：Namecheap、GoDaddy。这里以阿里为例，购买域名，</description>
    </item>
    <item>
      <title>网络与安全</title>
      <link>http://localhost:1313/posts/java/javaessay/net-program-java/</link>
      <pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaessay/net-program-java/</guid>
      <description>网络协议 网络协议是计算机网络中设备和系统之间进行数据交换的规则和约定。它定义了数据的格式、传输方式、处理流程以及错误检测与修正的机制，使不同设备能够正确地进行通</description>
    </item>
    <item>
      <title>Java中常见的语法糖</title>
      <link>http://localhost:1313/posts/java/javaessay/java-syntax-sugar/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaessay/java-syntax-sugar/</guid>
      <description>概览 语法糖是指编程语言中的一种语法结构，它们并不提供新的功能，而是为了让代码更易读、更易写而设计的。 语法糖使得某些常见的编程模式或操作变得更加简洁和直观，但在底</description>
    </item>
    <item>
      <title>程序脚本总结</title>
      <link>http://localhost:1313/posts/essays/program-script/</link>
      <pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/essays/program-script/</guid>
      <description>Java程序启停shell脚本 #!/bin/sh #非特殊应用下面内存分配已经够用 HEAP_MEMORY=1024M METASPACE_SIZE=256M SERVER_HOME=&amp;#34;$( cd &amp;#34;$( dirname &amp;#34;$0&amp;#34; )&amp;#34; &amp;amp;&amp;amp; pwd )&amp;#34; APP_NAME=${@: -1} #使用说明，用来提示输入参数 help() { echo &amp;#34;Usage: start.sh {start|stop|restart|status|help} APP_NAME.jar&amp;#34; &amp;gt;&amp;amp;2 echo &amp;#34;Examples:&amp;#34; echo &amp;#34; sh start.sh start APP_NAME.jar&amp;#34; echo &amp;#34; sh start.sh stop</description>
    </item>
    <item>
      <title>Hugo和Github Pages搭建博客</title>
      <link>http://localhost:1313/posts/essays/github-build-blog/</link>
      <pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/essays/github-build-blog/</guid>
      <description>搭建博客框架及对比 在众多的博客框架中，Hugo、Jekyll和Hexo因其出色的性能和易用性而备受推崇。 特点 Hugo Jekyll Hexo 速度 极高 中等 较高 易用性 高 中等 高（熟悉JavaS</description>
    </item>
    <item>
      <title>如何快速打开Github</title>
      <link>http://localhost:1313/posts/essays/accelerate-access-github/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/essays/accelerate-access-github/</guid>
      <description>为什么打开Github速度很慢、很卡？甚至访问不了，原因是中间有个域名通过DNS解析的过程，将域名解析为对应的IP地址，卡的原因主要是时间都花在了DNS解析上。</description>
    </item>
    <item>
      <title>如何强制复制网站上的文字</title>
      <link>http://localhost:1313/posts/essays/force-copy-website-text/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/essays/force-copy-website-text/</guid>
      <description>平时浏览网页和查找资料时，总会需要复制一些文字内容，用来引用、收藏、摘抄啊什么的，但是偶尔会遇到一些网站会禁止复制文字，一般都是让你开会员或者注册登录。 针这种情</description>
    </item>
    <item>
      <title>IDEA常用插件及使用技巧</title>
      <link>http://localhost:1313/posts/java/javaessay/dev-idea/</link>
      <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaessay/dev-idea/</guid>
      <description>下载 工欲善其事必先利其器，一个好的开发工具，能极大提高开发效率。IDEA新UI很漂亮，IDEA 官方下载地址： https://www.jetbrains.com/zh-cn/idea/download/other.html 。 下载完之后激活，激活工具百度云下载，链接： https://pan.baidu.com/s/1bmktlKMWC6nIqgJNSUYx_A?pwd=8888 。D</description>
    </item>
    <item>
      <title>线程创建方式</title>
      <link>http://localhost:1313/posts/java/javaessay/thread-created-way/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaessay/thread-created-way/</guid>
      <description>创建线程 在Java中创建一个线程，有且仅有一种方式，创建一个Thread类实例，并调用它的start方法。 Thread 最经典也是最常见的方式是通过继承Thread类，重写</description>
    </item>
    <item>
      <title>Java中的锁都有什么</title>
      <link>http://localhost:1313/posts/java/javaessay/java-locks/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaessay/java-locks/</guid>
      <description>锁 在Java中根据锁的特性来划分可以分为很多，锁的主要作用是确保多线程环境下的数据安全，从而保证程序的正确执行。 在Java中具体&amp;quot;锁&amp;quot;的实现</description>
    </item>
    <item>
      <title>Java中常用线程安全的集合</title>
      <link>http://localhost:1313/posts/java/javaessay/java-thread-collection/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaessay/java-thread-collection/</guid>
      <description>Java中常用线程安全的集合 在多线程环境中，数据的一致性和线程的安全性是至关重要的。传统的集合类，如ArrayList、HashMap和HashSet，在并发访</description>
    </item>
    <item>
      <title>Vue2.0基础入门笔记</title>
      <link>http://localhost:1313/posts/essays/vue2-note/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/essays/vue2-note/</guid>
      <description>参考资料 代码中的依赖库：Vue2.x-lib.zip Vue官方文档：https://cn.vuejs.org/v2/guide Vue参考视频资料：https:/</description>
    </item>
  </channel>
</rss>
