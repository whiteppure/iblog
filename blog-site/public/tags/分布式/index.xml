<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分布式 on 唯手熟尔</title>
    <link>http://localhost:1313/iblog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/</link>
    <description>Recent content in 分布式 on 唯手熟尔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 02 Aug 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/iblog/tags/%E5%88%86%E5%B8%83%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>分布式事务详解</title>
      <link>http://localhost:1313/iblog/posts/essays/java-transaction/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/essays/java-transaction/</guid>
      <description>基础概念 什么是事务 什么是事务？举个例子：你去超市买东西，&amp;ldquo;一手交钱，一手交货&amp;quot;就是一个事务的例子，交钱和交货必须同时成功，事务才算成功，其</description>
    </item>
    <item>
      <title>微服务治理</title>
      <link>http://localhost:1313/iblog/posts/essays/java-small-service/</link>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/essays/java-small-service/</guid>
      <description>什么是微服务架构 In short， the microservice architectural style is an approach to developing a single application as a suite of small services， each running in its own process and communicating with lightweight mechanisms， often an HTTP resource API。 These services are built around business capabilities and independently deployable</description>
    </item>
  </channel>
</rss>
