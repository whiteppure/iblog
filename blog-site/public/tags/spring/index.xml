<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on 脚踏实地</title>
    <link>http://localhost:1313/iblog/tags/spring/</link>
    <description>Recent content in Spring on 脚踏实地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 04 Sep 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/iblog/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringBoot整合Nacos</title>
      <link>http://localhost:1313/iblog/posts/spring/springboot-nacos/</link>
      <pubDate>Mon, 04 Sep 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/springboot-nacos/</guid>
      <description>Nacos安装启动 一键傻瓜试安装即可，官网写的很清楚这里不在赘述。 这里以Window环境安装为例。 启动Nacos将模式改为单机模式。 启动成功 Nacos相关配置 demo-dev.yaml</description>
    </item>
    <item>
      <title>SpringMVC与SpringWebFlux</title>
      <link>http://localhost:1313/iblog/posts/spring/java-spring-mvc-webflux/</link>
      <pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/java-spring-mvc-webflux/</guid>
      <description>Spring MVC Spring Web MVC是建立在Servlet API上的原始Web框架，从一开始就包含在Spring框架中。正式名称 &amp;ldquo;Spring Web MVC &amp;ldquo;来自其源模块的名称（spring-</description>
    </item>
    <item>
      <title>Spring详解</title>
      <link>http://localhost:1313/iblog/posts/spring/java-spring/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/java-spring/</guid>
      <description>概览 Spring是一个轻量级的Java开源框架，为了解决企业应用开发的复杂性而创建的。Spring的核心是控制反转（IOC）和面向切面（AOP）。 简单来说，Sp</description>
    </item>
    <item>
      <title>SpringBoot整合Docker</title>
      <link>http://localhost:1313/iblog/posts/spring/springboot-docker/</link>
      <pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/springboot-docker/</guid>
      <description>Linux上安装Docker 2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开。 Docker社区版（CE）：为了开发</description>
    </item>
    <item>
      <title>SpringBoot整合Kafka</title>
      <link>http://localhost:1313/iblog/posts/spring/springboot-kafka/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/springboot-kafka/</guid>
      <description>Docker安装和运行Kafka 获取Kafka Docker镜像。使用wurstmeister/kafka镜像，它包含了Kafka和Zookeeper。 docker pull wurstmeister/kafka 创建</description>
    </item>
    <item>
      <title>SpringBoot整合redis</title>
      <link>http://localhost:1313/iblog/posts/spring/springboot-redis/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/springboot-redis/</guid>
      <description>导入pom依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-data-redis&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.1.3.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 配置redis RedisConfig.class @Configuration public class RedisConfig { //用于解决注解操作redis 序列话的问题 @Bean(name = &amp;#34;myCacheManager&amp;#34;) public CacheManager cacheManager(RedisConnectionFactory redisConnectionFactory) { RedisCacheWriter redisCacheWriter = RedisCacheWriter.nonLockingRedisCacheWriter(redisConnectionFactory); RedisSerializer&amp;lt;Object&amp;gt; jsonSerializer = new GenericJackson2JsonRedisSerializer(); RedisSerializationContext.SerializationPair&amp;lt;Object&amp;gt; pair = RedisSerializationContext.SerializationPair .fromSerializer(jsonSerializer); RedisCacheConfiguration defaultCacheConfig = RedisCacheConfiguration.defaultCacheConfig() .serializeValuesWith(pair); defaultCacheConfig.entryTtl(Duration.ofMinutes(30)); return new RedisCacheManager(redisCacheWriter, defaultCacheConfig); } }</description>
    </item>
    <item>
      <title>SpringBoot整合Elasticsearch</title>
      <link>http://localhost:1313/iblog/posts/spring/springboot-elasticsearch/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/iblog/posts/spring/springboot-elasticsearch/</guid>
      <description>Docker安装和运行Elasticsearch 拉取Elasticsearch Docker镜像。从Docker Hub拉取Elasticsearch的官方镜像。 docker</description>
    </item>
  </channel>
</rss>
