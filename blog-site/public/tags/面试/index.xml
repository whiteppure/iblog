<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on 脚踏实地</title>
    <link>http://localhost:1313/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on 脚踏实地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 20 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java世界的「X光透视机」</title>
      <link>http://localhost:1313/posts/java/javainterview/java-reflection-scene/</link>
      <pubDate>Thu, 20 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javainterview/java-reflection-scene/</guid>
      <description>什么是反射 想象你走进一个神秘房间，房间里摆满了上锁的宝箱。正常情况下你需要对应的钥匙才能打开每个箱子，但突然你获得了一个万能开锁器，这个“万能开锁器”就类似于是</description>
    </item>
    <item>
      <title>Java字符串到底能有多长</title>
      <link>http://localhost:1313/posts/java/javainterview/java-string-howlong/</link>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javainterview/java-string-howlong/</guid>
      <description>编译期 在编写代码时，直接写在代码里的字符串（硬编码字符串）有一个长度限制。 具体来说，字符串的最大长度不能超过65534个字符。如果超过这个限制，编译器会报错。 当</description>
    </item>
    <item>
      <title>为什么Java的String一出生就「不可变」</title>
      <link>http://localhost:1313/posts/java/javainterview/java-string-final/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javainterview/java-string-final/</guid>
      <description>作为Java开发者，你一定每天都在和String打交道，但你有没有想过：为什么Java的String类被设计成不可变的？ 这个看似简单的设定，背后竟隐藏着语言设计</description>
    </item>
    <item>
      <title>Java对象复制：深拷贝 vs 浅拷贝</title>
      <link>http://localhost:1313/posts/java/javainterview/java-object-replication/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javainterview/java-object-replication/</guid>
      <description>如何复制对象 在实际开发过程中，对象的复制与转换是非常常见且重要的操作。这类操作通常出现在不同层之间的数据传递或转换中，例如将数据传输对象（DTO）转换为持久化对</description>
    </item>
    <item>
      <title>速览Java程序员面试题及答案，持续更新...</title>
      <link>http://localhost:1313/posts/java/keepupd/interview-junior-javaer/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/keepupd/interview-junior-javaer/</guid>
      <description>为方便面试，不至于在网上像一个无头苍蝇乱翻，整理了一系列关于面试的资料。本系列文章几乎涵盖了Java所有的知识点，包括：Java基础、网络与安全、常见框架、分布</description>
    </item>
    <item>
      <title>面试中常见的问题</title>
      <link>http://localhost:1313/posts/java/javaemp/interview-questions-and-answers/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/java/javaemp/interview-questions-and-answers/</guid>
      <description>自我介绍 个人经历可以进行适当包装，但是不能造假，一方面如果一旦被人拆穿，后果就不用我说了吧，另一方面如果你说谎，说了一些你自己不感兴趣的项目，在入职之后可能会被</description>
    </item>
  </channel>
</rss>
