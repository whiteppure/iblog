<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 脚踏实地</title>
    <link>https://blog.lijizhi.website/posts/</link>
    <description>Recent content in Posts on 脚踏实地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 19 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blog.lijizhi.website/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>软考高级架构师-项目管理</title>
      <link>https://blog.lijizhi.website/posts/exam/exam-software-architect-03/</link>
      <pubDate>Wed, 19 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/exam/exam-software-architect-03/</guid>
      <description>项目管理 盈亏平衡分析 盈亏平衡即计算项目赚钱与不赚钱平衡的一个情况。 正常情况下：销售额=固定成本+可变成本+税费+利润 盈亏平衡时：销售额=固定成本+可变成本+税费</description>
    </item>
    <item>
      <title>Java字符串到底能有多长</title>
      <link>https://blog.lijizhi.website/posts/java/javainterview/java-string-howlong/</link>
      <pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javainterview/java-string-howlong/</guid>
      <description>编译期 在编写代码时，直接写在代码里的字符串（硬编码字符串）有一个长度限制。 具体来说，字符串的最大长度不能超过65534个字符。如果超过这个限制，编译器会报错。 当</description>
    </item>
    <item>
      <title>为什么Java的String一出生就「不可变」</title>
      <link>https://blog.lijizhi.website/posts/java/javainterview/java-string-final/</link>
      <pubDate>Mon, 17 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javainterview/java-string-final/</guid>
      <description>作为Java开发者，你一定每天都在和String打交道，但你有没有想过：为什么Java的String类被设计成不可变的？ 这个看似简单的设定，背后竟隐藏着语言设计</description>
    </item>
    <item>
      <title>Java对象复制：深拷贝 vs 浅拷贝</title>
      <link>https://blog.lijizhi.website/posts/java/javainterview/java-object-replication/</link>
      <pubDate>Sun, 16 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javainterview/java-object-replication/</guid>
      <description>如何复制对象 在实际开发过程中，对象的复制与转换是非常常见且重要的操作。这类操作通常出现在不同层之间的数据传递或转换中，例如将数据传输对象（DTO）转换为持久化对</description>
    </item>
    <item>
      <title>GitHub Pages自定义域名配置</title>
      <link>https://blog.lijizhi.website/posts/essays/github-domain/</link>
      <pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/essays/github-domain/</guid>
      <description>域名注册 国内申请需要进行实名认证和备案。国内常见域名服务商：阿里、华为、腾讯。国际平台（免备案）：Namecheap、GoDaddy。这里以阿里为例，购买域名，</description>
    </item>
    <item>
      <title>软考高级架构师-软件工程</title>
      <link>https://blog.lijizhi.website/posts/exam/exam-software-architect-02/</link>
      <pubDate>Thu, 16 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/exam/exam-software-architect-02/</guid>
      <description>软件工程 考试重点之一，综合分值接近20分，在案例分析或论文写作也可能涉及软件工程主题。 软件过程模型 也称软件开发模型，指在软件开发过程中遵循的一些开发规范、思想、</description>
    </item>
    <item>
      <title>软考高级架构师-系统工程与信息系统基础</title>
      <link>https://blog.lijizhi.website/posts/exam/exam-software-architect-01/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/exam/exam-software-architect-01/</guid>
      <description>系统工程与信息系统基础 系统工程是一种组织管理技术。它是为了最好的实现系统的目的，对系统的组成要素、组织结构、信息流、控制机构进行分析研究的科学方法。 系统工程从整</description>
    </item>
    <item>
      <title>网络与安全</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/net-program-java/</link>
      <pubDate>Sun, 24 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/net-program-java/</guid>
      <description>网络协议 网络协议是计算机网络中设备和系统之间进行数据交换的规则和约定。它定义了数据的格式、传输方式、处理流程以及错误检测与修正的机制，使不同设备能够正确地进行通</description>
    </item>
    <item>
      <title>编程专业术语汇总及解释，持续更新...</title>
      <link>https://blog.lijizhi.website/posts/java/keepupd/java-dict/</link>
      <pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/keepupd/java-dict/</guid>
      <description>API API即Application Programming Interface，翻译过来是应用程序编程接口，它是一组定义了不同软件组件之间交互方式的规范和协议。 简而言之，API 就是软件系</description>
    </item>
    <item>
      <title>算法详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-algorithms/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-algorithms/</guid>
      <description>算法英文对应的单词是Algorithm，它的本意为解决问题的方法，所以算法直接理解就是解决问题的方法。在计算机领域定义就是一系列解决问题的、清晰、可执行的计算机</description>
    </item>
    <item>
      <title>数据结构详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-data-structures/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-data-structures/</guid>
      <description>数据结构是一门研究数据组织方式的学科，是编程语言的重要组成部分。学好数据结构，可以编写出更高效的代码，同时为学习和掌握算法奠定坚实的基础。 数据结构分为两大类：线</description>
    </item>
    <item>
      <title>this关键字详解</title>
      <link>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-this/</link>
      <pubDate>Thu, 31 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-this/</guid>
      <description>this 在Java中，this是一个特殊的引用，指向当前对象的实例。 JVM会给每个对象分配一个this，来代表当前对象，换句话说，this是一个特殊的变量，它保存了当</description>
    </item>
    <item>
      <title>代码之外-志闲少欲</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-10/</link>
      <pubDate>Sat, 19 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-10/</guid>
      <description>“志”的意思是志向，“心之所之为志”，心里向往的目标为“志”，你的志向是什么？相信没有人从小的志向就是赚钱或者买房子、车子。 在不谈物质的情况下，人们还是喜欢追求</description>
    </item>
    <item>
      <title>transient关键字详解</title>
      <link>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-transient/</link>
      <pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-transient/</guid>
      <description>transient transient关键字在Java中用于声明一个类的成员变量，它表示该变量不应被序列化。当对象序列化时，该字段不会被持久化到目标字节流中。也就是说，使用tra</description>
    </item>
    <item>
      <title>strictfp关键字详解</title>
      <link>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-strictfp/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-strictfp/</guid>
      <description>strictfp strictfp可能是最没有存在感的关键字了，很多人写了多年Java甚至都不知道它的存在。 默认情况下，Java中的浮点计算与平台相关。因此，浮点结果的精度取决</description>
    </item>
    <item>
      <title>static关键字详解</title>
      <link>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-static/</link>
      <pubDate>Sat, 10 Aug 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-static/</guid>
      <description>static static是Java中的一个关键字，用于定义类级别的成员，类级别的成员是指那些属于整个类，而不是特定对象实例的成员。在Java中，类级别的成员包括静态变量和</description>
    </item>
    <item>
      <title>基于Redis的分布式锁的演进</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/redis-distributed-lock-evolve/</link>
      <pubDate>Sat, 27 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/redis-distributed-lock-evolve/</guid>
      <description>基于Redis的分布式锁 基于Redis的分布式锁，是利用Redis提供的原子操作和过期机制来管理分布式环境中的锁。 使用Redis的SETNX命令来设置锁。SET</description>
    </item>
    <item>
      <title>SpringBoot详解</title>
      <link>https://blog.lijizhi.website/posts/java/spring/java-springboot/</link>
      <pubDate>Thu, 25 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/java-springboot/</guid>
      <description>概览 SpringBoot是由Pivotal团队提供的全新框架，其设计目的是用来简化Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而</description>
    </item>
    <item>
      <title>内存泄漏详解</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/java-jvm-memoryleak/</link>
      <pubDate>Tue, 23 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/java-jvm-memoryleak/</guid>
      <description>什么是内存泄漏 内存泄漏是指不使用的对象持续占有内存使得内存得不到释放，从而造成内存空间的浪费。严格来说，只有对象不会再被程序用到了，但是GC又不能回收他们的情况</description>
    </item>
    <item>
      <title>Java枚举</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-enum/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-enum/</guid>
      <description>概述 枚举在Java中是一种特殊的类，用来定义一组固定的常量。它在Java5中引入，提供了一种类型安全的方式来定义和使用常量集合。尽管enum看起来像是新的数据类</description>
    </item>
    <item>
      <title>Java泛型</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-generics/</link>
      <pubDate>Mon, 15 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-generics/</guid>
      <description>概览 在Java中，泛型是一种强大的编程特性，允许类、接口和方法在定义时声明一种参数化类型，而在使用时可以指定具体的类型参数。泛型的主要目的是提高代码的重用性和类</description>
    </item>
    <item>
      <title>Java中常见的语法糖</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-syntax-sugar/</link>
      <pubDate>Sun, 14 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-syntax-sugar/</guid>
      <description>概览 语法糖是指编程语言中的一种语法结构，它们并不提供新的功能，而是为了让代码更易读、更易写而设计的。 语法糖使得某些常见的编程模式或操作变得更加简洁和直观，但在底</description>
    </item>
    <item>
      <title>synchronized关键字详解</title>
      <link>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-synchronized/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-synchronized/</guid>
      <description>synchronized synchronized是Java提供的关键字译为同步，是Java中用于实现线程同步的一种机制。它可以确保在同一时间只有一个线程能够执行某段代码，从而避免线程</description>
    </item>
    <item>
      <title>volatile关键字详解</title>
      <link>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-volatile/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javakeyword/java-keyword-volatile/</guid>
      <description>volatile volatile通常被比喻成轻量级的锁，是Java并发编程中比较重要的一个关键字。volatile作用： 可见性：当一个线程修改了 volatile 变量的值，新的值对于其他线程</description>
    </item>
    <item>
      <title>ArrayList详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-arraylist/</link>
      <pubDate>Wed, 26 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-arraylist/</guid>
      <description>ArrayList 在List接口实现类中，最常用的就是ArrayList，ArrayList类是一个可以动态修改的数组，与普通数组的区别就是它是没有固定大小的限制，可以添加或删</description>
    </item>
    <item>
      <title>速览Java程序员面试题及答案，持续更新...</title>
      <link>https://blog.lijizhi.website/posts/java/keepupd/interview-junior-javaer/</link>
      <pubDate>Mon, 17 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/keepupd/interview-junior-javaer/</guid>
      <description>为方便面试，不至于在网上像一个无头苍蝇乱翻，整理了一系列关于面试的资料。本系列文章几乎涵盖了Java所有的知识点，包括：Java基础、网络与安全、常见框架、分布</description>
    </item>
    <item>
      <title>MySQL详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-mysql/</link>
      <pubDate>Thu, 30 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-mysql/</guid>
      <description>概述 MySQL是一种关系型数据库，主要用于持久化存储我们系统中的一些数据。MySQL如此流行的原因，主要具有下面这些优点： 成熟稳定，功能完善。 开源免费。 文档丰富</description>
    </item>
    <item>
      <title>Java程序中常见问题</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/java-always-problems/</link>
      <pubDate>Tue, 28 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/java-always-problems/</guid>
      <description>解决CPU使用过高 一般在生产环境排查程序故障，都会查看日志什么的，但是有些故障日志是看不出来的，就比如：CPU使用过高。 那应该怎么办呢？我们需要结合Linux命</description>
    </item>
    <item>
      <title>程序脚本总结</title>
      <link>https://blog.lijizhi.website/posts/essays/program-script/</link>
      <pubDate>Mon, 27 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/essays/program-script/</guid>
      <description>Java程序启停shell脚本 #!/bin/sh #非特殊应用下面内存分配已经够用 HEAP_MEMORY=1024M METASPACE_SIZE=256M SERVER_HOME=&amp;#34;$( cd &amp;#34;$( dirname &amp;#34;$0&amp;#34; )&amp;#34; &amp;amp;&amp;amp; pwd )&amp;#34; APP_NAME=${@: -1} #使用说明，用来提示输入参数 help() { echo &amp;#34;Usage: start.sh {start|stop|restart|status|help} APP_NAME.jar&amp;#34; &amp;gt;&amp;amp;2 echo &amp;#34;Examples:&amp;#34; echo &amp;#34; sh start.sh start APP_NAME.jar&amp;#34; echo &amp;#34; sh start.sh stop</description>
    </item>
    <item>
      <title>JVM详解</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/java-jvm-detail/</link>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/java-jvm-detail/</guid>
      <description>JVM整体结构 Java虚拟机有很多，HotSpot VM是目前市面上高性能虚拟机的代表作之一。HotSpot 的技术优势就在于热点代码探测技术（名字就从这来的）和准</description>
    </item>
    <item>
      <title>分布式锁详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/distributed-lock/</link>
      <pubDate>Sat, 25 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/distributed-lock/</guid>
      <description>分布式锁 在单机程序中，我们常用ReetrantLock、synchronized保证线程安全。类似这样： public class MainTest { private static final ReentrantLock lock = new ReentrantLock(); public static void main(String[] args) { lock.lock(); try { System.out.println(&amp;#34;hello world&amp;#34;); }finally { lock.unlock(); } }</description>
    </item>
    <item>
      <title>代码之外-谈谈事业</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-07/</link>
      <pubDate>Mon, 20 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-07/</guid>
      <description>这里说的是事业，不是工作。 事业与工作虽然都是做事情，但它们最本质的区别在于有没有使命感。 工作是靠它赚钱养家糊口，而事业则是即使不挣钱哪怕让你倒贴钱你都乐意去做的</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-非离婚不可时的六大要点</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-23/</link>
      <pubDate>Sat, 18 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-23/</guid>
      <description>夫妻之间如果闹的不可开交，最好的办法是两个人先分居一段时间，互相都冷静一下。 不要一下子就做决定，去办手续，很多时候离婚的决定往往是在气头上，不要在有情绪的时候做</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-恋爱失败婚姻破裂的处置</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-22/</link>
      <pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-22/</guid>
      <description>很多人婚姻破裂、恋爱失败就会觉得天昏地暗，未来好像没有一点希望，甚至有些人会觉得活着没意思，从而想不开而去自杀。 恋爱最好不要失败，但是失败了你就认了；婚姻最好不</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-夫或妻有外遇的六大原则</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-21/</link>
      <pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-21/</guid>
      <description>现在社会由于科技的发展，人们沟通时很方便的，所以有现在人有外遇的情况会更多。 夫妻之间有第三者，不管是主动找的，还是闯进来的，这都是外遇，通俗点说就是婚外发生感情</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-夫妻吵架的六大主要原则</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-20/</link>
      <pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-20/</guid>
      <description>夫妻之间是没有不吵架的，只不过是吵架多少的问题。有关系才会吵架，没关系根本不会吵架，关系越亲密，彼此越密切，才越容易吵架，所谓爱之深责之切。 吵架没有关系，只要不</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-儿子有责任促进婆媳和睦</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-19/</link>
      <pubDate>Tue, 14 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-19/</guid>
      <description>媳妇和婆婆相处的都不是很好，这是一个很古老的问题。相处不好责任既不在媳妇也不在婆婆，而是在儿子，儿子有责任促进婆媳之间的和谐。 婆媳之间发生矛盾，千万不要以为不关</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-结婚之后联手抵御第三者</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-18/</link>
      <pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-18/</guid>
      <description>结婚之后如果要保持婚姻的圆满，就一定要联手抵御第三者的干扰，只要第三者进来，我们的婚姻就会破碎，家庭就得不到保障，从而引发各种问题。 可以通过彼此关心来互相了解对</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-夫妻在卧室里外不同形象</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-17/</link>
      <pubDate>Sun, 12 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-17/</guid>
      <description>夫妻要得到外边人的尊重就需要及时调整自己的角色，要记住只有“卧室”里面才是夫妻。 就比如夫妻都在同一家公司上班，如果在上班期间还像夫妻那样，公司就会把你开除，所以</description>
    </item>
    <item>
      <title>代码之外-改变所处环境</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-06/</link>
      <pubDate>Sun, 12 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-06/</guid>
      <description>如果我们只思考不能去做就成了空想，如果我们不能去改变，那我们的思考就失去了意义。那我们如何在有限的范围内做选择，来尽量提高自己命运的下限？ 分享出来的东西我都是已</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-结婚的目的在于创造生命</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-16/</link>
      <pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-16/</guid>
      <description>结婚的目的是多层次的，其中一个就是生儿育女。因为人的生命是非常有限的，如果人死了之后没有人继承，那就没办法传承下去。 所以这里所说的创造生命指的是传承，而不是单纯</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-结婚以后应互相矫正缺点</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-15/</link>
      <pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-15/</guid>
      <description>男怕入错行女怕出错郎，说的就是婚姻一旦出错是很难挽回的，所以一开始就要非常的慎重，要有目标、有计划、有目的，然后按部就班一步一步，循序渐进，不要着急。 所以男女双</description>
    </item>
    <item>
      <title>代码之外-人的局限性</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-05/</link>
      <pubDate>Fri, 10 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-05/</guid>
      <description>我是做Java开发的一个程序员，今年我辞职了，最近几天找工作结果发现根本找不到，以前我总是心高气傲的，因为之前赚的钱我觉得还算是比较满意的，总是以为凭借自己这份</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-男女平等却有不同的的性质</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-14/</link>
      <pubDate>Thu, 09 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-14/</guid>
      <description>中国的文化是阴阳文化，表面上看我们是重男轻女，但实际上看我们是重女轻男。因为看得见的部分都是男人在做主，看不见的部分都是女人在做主。 男女同权不同质。在这方面男方</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-结婚典礼应该注意的事情</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-13/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-13/</guid>
      <description>结婚要有典礼最关键的是因为有见证人。在古代，由于交通不便和信息闭塞，人们很难证明自己的婚姻关系，因此需要通过婚礼来邀请亲友作为见证人，确保婚姻的真实性和有效性。</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-恋爱的结果是婚姻才圆满</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-12/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-12/</guid>
      <description>在当代社会，有一种观点认为结婚是对纯爱情的不信任，认为婚姻仅仅是一种形式，与爱情无关。他们主张，结婚就像是束缚自由的绳索，而真正的爱情应该是无拘无束的。 听起来好</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-性爱婚姻蜜月之后就生变</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-11/</link>
      <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-11/</guid>
      <description>人的尊严、价值是一定要和动物有所区别才能体现的，爱情和婚姻中如果双方只有交配、性爱而没有更远大的目标和理想，那么双方相处是不能长久的，而且作为人来说跟动物是没有</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-两府联姻并非两个人结婚</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-10/</link>
      <pubDate>Sat, 27 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-10/</guid>
      <description>爱情和婚姻是文化的一种产物，世界上因为地区的不同，有不同的文化，所以爱情的表现也是不一样的，婚姻的形式也是各不相同。 在西方文化中，婚姻强调的是两个人基于爱情的选</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-首次家庭拜访应注意事项</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-09/</link>
      <pubDate>Fri, 26 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-09/</guid>
      <description>带女朋友第一次回家，一起吃饭的时候要注意不要夹菜。如果夹菜第一个心里受到伤害的就是母亲，年轻人常常没有顾虑这么多，所以常常无意间伤害了他人。 这反应了个人主义和集</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-个人参与不如家庭参与</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-08/</link>
      <pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-08/</guid>
      <description>在这个时代，我们常常倡导独立，但真正的独立并非意味着完全孤独，无人依靠。有时，过分强调独立会导致与家人的隔阂，甚至在关键时刻无法获得必要的支持。 西方社会更注重个</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-循序交往持续加深认识</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-07/</link>
      <pubDate>Wed, 24 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-07/</guid>
      <description>在这个纷繁复杂的世界里，我们追求的是那份真挚的情感和一生的伴侣。有人说，爱情如绚烂烟火，短暂而美丽；婚姻则如同细水长流，源远流长。真正的感情，是在时光的洗礼中逐</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-对异性要关怀而不是好奇</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-06/</link>
      <pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-06/</guid>
      <description>人对异性的态度存在好奇与关怀两种不同状态。当我们真心关怀某个人时，我们会尊重、保护对方，为对方着想；而单纯的好奇可能只会让我们在满足了自己的好奇心后便失去责任感</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-真正的恋爱只有一次</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-05/</link>
      <pubDate>Mon, 22 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-05/</guid>
      <description>恋爱远不止于简单的言语表白，它是基于对彼此内心世界的深入理解和接纳。所以恋爱要和婚姻结合在一起，否则就是游戏人间。 恋爱不是嘴巴上讲我爱你，是了解对方，接受对方的</description>
    </item>
    <item>
      <title>代码之外-谈谈敬畏</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-04/</link>
      <pubDate>Sun, 21 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-04/</guid>
      <description>我认为人一生最重要是要学会控制。控制自己的心，控制自己的欲望，做事要张弛有度，要意识到过度追求可能带来的风险，我们才能更好地幸福生活。 最近老是说一些空话，所以就</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-恋爱和婚姻都需要正确的学习</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-04/</link>
      <pubDate>Sat, 20 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-04/</guid>
      <description>在生活的长河中，爱情与婚姻似乎是每个人的必经之路，它们如家常便饭，看似简单，却蕴含着无尽的学问。 很多人误以为只要相爱，就能自然而然地走进婚姻的殿堂，但事实并非如</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-确立自作自受的观念</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-03/</link>
      <pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-03/</guid>
      <description>人生永远只有一条不变的定律那就是自作自受。自作自受指的是对自己所作所为，做产生的结果，要完全承担。 无论是好是坏，没有人能够替我们承受，也没有人可以完全拯救我们。</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-每一个人都应该受到奖励</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-02/</link>
      <pubDate>Thu, 18 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-02/</guid>
      <description>爱情和婚姻，是人生中最重要的旅程之一，大家都很重视爱情和婚姻，然而，我们却很少在教科书或家庭中得到关于如何经营这些关系的指导。 每个人都在摸索，尽力去理解和实践，</description>
    </item>
    <item>
      <title>曾仕强-爱情与婚姻-爱情与婚姻的必要性</title>
      <link>https://blog.lijizhi.website/posts/ideology/love-and-marriage-01/</link>
      <pubDate>Wed, 17 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/love-and-marriage-01/</guid>
      <description>成家立业是人生中的重大的两件事，但是现在我们对事业很有兴趣，对于成家是能拖就拖，大多数人认为家庭对于事业来说，事业很重要而家庭不重要。 其实家庭比事业更重要，因为</description>
    </item>
    <item>
      <title>Hugo和Github Pages搭建博客</title>
      <link>https://blog.lijizhi.website/posts/essays/github-build-blog/</link>
      <pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/essays/github-build-blog/</guid>
      <description>搭建博客框架及对比 在众多的博客框架中，Hugo、Jekyll和Hexo因其出色的性能和易用性而备受推崇。 特点 Hugo Jekyll Hexo 速度 极高 中等 较高 易用性 高 中等 高（熟悉JavaS</description>
    </item>
    <item>
      <title>代码之外-谈谈道德经</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-03/</link>
      <pubDate>Sun, 14 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-03/</guid>
      <description>《道德经》的源头应该是上古时代，国家君主在治理国家的过程中，总结出的统治者、领导者法则。 这些法则要教育未来的接班人管理国家，所以就整理出来刻在太庙里面金人的背后</description>
    </item>
    <item>
      <title>程序员如何提高收入</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/programmer-increase-income/</link>
      <pubDate>Sat, 13 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/programmer-increase-income/</guid>
      <description>程序员作为副业推荐就是外包接单。怎么接单呢？以下是总结的三种方式。 第一种是靠熟人介绍。如果你做程序员时间比较长，身边总会有些比较厉害的人，他能带你玩一玩，跟这些</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-礼仪关乎成败</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-007/</link>
      <pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-007/</guid>
      <description>懂礼仪、有教养、会做人，就有机会、可能成功，缺少礼仪、不会做人，必然失败。 懂礼仪意味着我们知道如何在不同的场合下表现自己，如何尊重他人，如何恰当地表达自己的意见</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-恋爱之道</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-006/</link>
      <pubDate>Wed, 10 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-006/</guid>
      <description>恋爱要考虑感情，感情比恋爱慢半拍，尤其是在确定恋爱关系之前要问自己到底爱ta什么，要想明白这个问题，别相信一见钟情。 这里指的不是简单的动物性的吸引，长得好看怎样</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-礼仪的重要性</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-005/</link>
      <pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-005/</guid>
      <description>礼仪是高素质的表现，应试教育的结果是有教育没教养，有知识没文化。 在当下这个快节奏的时代，我们似乎过于注重知识的灌输和技能的训练，而忽视了对孩子们礼仪教育的培养。</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-礼仪的真谛</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-004/</link>
      <pubDate>Mon, 08 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-004/</guid>
      <description>人一半是天使，一半是野兽。黑天在家的时候是野兽，白天在公共场合的时候是天使，大街上看到漂亮姑娘谁不想看两眼，想看是正常的，但是不能随便占有。就跟那花一样，能看花</description>
    </item>
    <item>
      <title>b站摘抄-不要把穷当作修身养性</title>
      <link>https://blog.lijizhi.website/posts/ideology/bilibili-extract-04/</link>
      <pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/bilibili-extract-04/</guid>
      <description>反思自己有很长一段时间，不愿意去承认自己的欲望，装作自己的欲望太小实际上欲望很强，装清高，如果长期如此就把自己的一辈子都给装进去了。 等你赚到了钱，有了足够再社会</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-礼仪的坚持</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-003/</link>
      <pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-003/</guid>
      <description>礼仪是一个长期的、蹉跎的、艰苦的、甚至是痛苦的、脱胎换骨的做人过程。它并非一蹴而就，而是需要我们在岁月的长河中，不断地磨砺、修炼和升华。 英国人说十年可以培养一个</description>
    </item>
    <item>
      <title>计算机专业参考指南</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/computer-professional-ref-guide/</link>
      <pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/computer-professional-ref-guide/</guid>
      <description>计算机知识结构 计算机知识结构组成大致分为学科基础知识和应用编程技能。 学科基础知识包括：数据结构、计算机网络、操作系统、数学、计算机组成原理等等； 应用编程包括：编</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-做人的层次</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-002/</link>
      <pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-002/</guid>
      <description>礼仪还强调做人。一切成功都是做人的成功，一切失败都是做人的失败。连人都做不好，还做什么事呢？ 所以当一个人做事情遇到困难的时候，一定是他做人缺位的折射。因此做人是</description>
    </item>
    <item>
      <title>艾跃进-社交礼仪-礼仪的内涵</title>
      <link>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-001/</link>
      <pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/art-eloquence-and-social-graces-001/</guid>
      <description>根据专家多年研究发现，在一个人成功的过程中，智商只起到15%甚至10%的作用，而情商起到85%-90%的作用，社交礼仪属于情商范畴，学习礼仪是很重要的。 礼是指制</description>
    </item>
    <item>
      <title>资源干货读书推荐，持续更新...</title>
      <link>https://blog.lijizhi.website/posts/java/keepupd/valuable-resource/</link>
      <pubDate>Sat, 30 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/keepupd/valuable-resource/</guid>
      <description>读书推荐 Java电子书 《深入理解计算机系统》 《HeadFirst设计模式》 《Java数据结构和算法》 《大话数据结构》 《Java核心技术卷I基础知识》 《Java编</description>
    </item>
    <item>
      <title>代码之外-谈谈财富</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-02/</link>
      <pubDate>Fri, 29 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-02/</guid>
      <description>人这一生免不了不和财富打交道。最近一段时间通过读一些国学和接触一些信息，对财富也有了一些思考和认识。 我认为财富与德行之间的关系最为密切。表面看两者看似没有关联关</description>
    </item>
    <item>
      <title>赵玉平-自我管理-时间管理的方法</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-005/</link>
      <pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-005/</guid>
      <description>张大财主去了山上的清凉寺，向寺里的主持静能禅师请教，说：“大师您好，有事向您请教，希望您能解答。我这一天到晚特别忙，压力特别大，感觉自己把吃饭睡觉的时间都用来处</description>
    </item>
    <item>
      <title>赵玉平-自我管理-提高心智模式的方法</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-004/</link>
      <pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-004/</guid>
      <description>概述 在我们的认知中，成功的人往往都是聪明睿智的人，成功是和智商高划等号的，但事实并非如此。 智商之父，推孟发起过一项研究，结果表明很多智商高的人并没有成功而且栽了</description>
    </item>
    <item>
      <title>赵玉平-自我管理-自我悦纳的方法</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-006/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-006/</guid>
      <description>我们总能看到自己的缺点和不足，对自己不满意，实际上这种不满意的情绪在生活中一直都存在。 照完合影，照片打出来，你看照片你会发现同班同学的人照的照片都很好，唯有看自</description>
    </item>
    <item>
      <title>赵玉平-自我管理-做事要留有余地</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-001/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-001/</guid>
      <description>《韩非子》里有一个著名的故事，叫盆水杀人。 春秋战国年间，齐国国君有一个好朋友叫夷射，一年冬天，齐王叫夷射到宫里喝酒，二人对饮，你一杯我一杯，一杯又一杯，喝的是前</description>
    </item>
    <item>
      <title>赵玉平-自我管理-处理复杂人际关系的策略</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-002/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-002/</guid>
      <description>复杂关系指的是三方以上的关系，这世界有黑有白，那这是单纯简单的世界，可是这个世界还有灰。黑白灰这三方就构成了复杂事件。 所以研究人际复杂关系可以带入三方博弈模型。</description>
    </item>
    <item>
      <title>赵玉平-自我管理-说话沟通的策略</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-008/</link>
      <pubDate>Tue, 26 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-008/</guid>
      <description>日常生活中，说话沟通有两个最重要的因素：第一自己心里觉得舒服，第二对方心里觉得舒服根据这两个因素，把沟通策略分成5种。 第一种，考虑自己的感受不考虑对方的感受，这</description>
    </item>
    <item>
      <title>赵玉平-自我管理-自我解释的方法</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-007/</link>
      <pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-007/</guid>
      <description>举个例子，狐狸吃不到葡萄，说葡萄是酸的，这就是自我解释。 人生的路上没有一帆风顺，当遇到挫折发生一些不好的事情的时候，就可以用自我解释，让自己过这个关，迈这个坎。</description>
    </item>
    <item>
      <title>b站摘抄-普通人如何快速崛起</title>
      <link>https://blog.lijizhi.website/posts/ideology/bilibili-extract-03/</link>
      <pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/bilibili-extract-03/</guid>
      <description>一句话，搞关系混圈子。 一个人要想改变自己跳出去，改变自己固有的这套思维模式，首先要给自己的世界开一扇窗，要获取外部信息，那怎么获得？靠读书，看视频，这种获取一方</description>
    </item>
    <item>
      <title>代码之外-谈谈利他</title>
      <link>https://blog.lijizhi.website/posts/ideology/other-code-01/</link>
      <pubDate>Sat, 23 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/other-code-01/</guid>
      <description>我们的文化是人本位，人被视为推动历史进程的核心力量，人与人之间的互动，无论是合作还是竞争，塑造了社会的根基。 我们能够协调合作，共同创造美好的未来，是因为我们懂得</description>
    </item>
    <item>
      <title>赵玉平-自我管理-情绪管理的方法</title>
      <link>https://blog.lijizhi.website/posts/ideology/self-government-003/</link>
      <pubDate>Fri, 22 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/self-government-003/</guid>
      <description>概述 欲取天下先治己身，做大事先提高修养，而自我修养最开始就是情绪管理。 不能着急，不能上火，不能拍桌子乱发脾气，事到临头能忍得住，能化解的了。才能体现一个人真正的</description>
    </item>
    <item>
      <title>如何快速打开Github</title>
      <link>https://blog.lijizhi.website/posts/essays/accelerate-access-github/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/essays/accelerate-access-github/</guid>
      <description>为什么打开Github速度很慢、很卡？甚至访问不了，原因是中间有个域名通过DNS解析的过程，将域名解析为对应的IP地址，卡的原因主要是时间都花在了DNS解析上。</description>
    </item>
    <item>
      <title>b站摘抄-普通人要做好人生防坑防诈骗</title>
      <link>https://blog.lijizhi.website/posts/ideology/bilibili-extract-02/</link>
      <pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/bilibili-extract-02/</guid>
      <description>作为一个没钱，没背景的普通人，生活在现在这个病态的社会，要做好人生的防坑防诈骗，稍不留神十几年如一日的努力成果就会付之东流。 选择大于努力，有些时候做好防坑防诈骗</description>
    </item>
    <item>
      <title>b站摘抄-逆向思维带来的一些思考</title>
      <link>https://blog.lijizhi.website/posts/ideology/bilibili-extract-01/</link>
      <pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/ideology/bilibili-extract-01/</guid>
      <description>假设你现在做的一切都是错的，这里的错并不是真正意义上的错，而指的是现在做事情的方法是低效率的。 大部分人做事情都容易陷入到细节里面去，凭感觉去做事情，你是凭感觉去</description>
    </item>
    <item>
      <title>如何快速写一份简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/quick-write-resume/</link>
      <pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/quick-write-resume/</guid>
      <description>最近一段时间一直在忙简历相关的事情，起初是有一个其他行业的朋友问我，说这些简历我写了好久真难写，我说你可以借助AI，现在这种工具多了去了，为什么不借助呢？ 他回答</description>
    </item>
    <item>
      <title>前端20240316简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20240316/</link>
      <pubDate>Sat, 16 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20240316/</guid>
      <description>自我介绍 199* · *** 河北·** 152****6158 &amp;nbsp;152****6158@163.com 有5年前端开发经验，擅长封装复杂业务组件，熟练使用Vue2、Vue3框架进行开发，有微信小程序和App开发丰富实战经验；能独立封装复</description>
    </item>
    <item>
      <title>Java20240315简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20240315/</link>
      <pubDate>Fri, 15 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20240315/</guid>
      <description>自我介绍 1998 · 李济芝 河北唐山 15176733539 &amp;nbsp;m15176733539@163.com 5年开发经验，熟悉支付、电商、银行相关业务。擅长使用设计模式，具备独立开发及故障排查能力。有框架设计开发经验、前端后端Web开发经</description>
    </item>
    <item>
      <title>如何强制复制网站上的文字</title>
      <link>https://blog.lijizhi.website/posts/essays/force-copy-website-text/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/essays/force-copy-website-text/</guid>
      <description>平时浏览网页和查找资料时，总会需要复制一些文字内容，用来引用、收藏、摘抄啊什么的，但是偶尔会遇到一些网站会禁止复制文字，一般都是让你开会员或者注册登录。 针这种情</description>
    </item>
    <item>
      <title>前端入门学习路线</title>
      <link>https://blog.lijizhi.website/posts/java/toolsintro/front-learning-route/</link>
      <pubDate>Thu, 29 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/toolsintro/front-learning-route/</guid>
      <description>基础知识 网络知识 HTTP DNS 域名 云服务 网络安全 HTTPS CORS 网络渗透 OWASP HTML CSS JavaScript JQuery Ajax ES6-ES11 综合应用 工程化体系 代码规范 CSS预处理器 Less Sass PostCSS Node Promise Axios 工具 包管理工具 Yarn Npm 打包工具 Webpack Parcel 代码格式化工具</description>
    </item>
    <item>
      <title>Java20240228简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20240228/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20240228/</guid>
      <description>自我介绍 19** · *** 河北·** 182****7274 &amp;nbsp;160****714@qq.com 求职意向 期望城市：唐山 工作薪资：面议 工作性质：全职 目标职能：中级/高级Java工程师 专业技能 熟练掌握Java相关知识，具备良好的面向</description>
    </item>
    <item>
      <title>2023工作总结</title>
      <link>https://blog.lijizhi.website/posts/worksummary/work-summary-2023/</link>
      <pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/worksummary/work-summary-2023/</guid>
      <description>在职期间，我主要负责耐材项目的开发与维护，共迭代171个版本。通过与团队成员的紧密合作，我们按时完成了项目中的需求。在这段时间里，我不断提升自己的专业技能和知识</description>
    </item>
    <item>
      <title>Java20230915简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20230915/</link>
      <pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20230915/</guid>
      <description>自我介绍 1998 · 李济芝 河北唐山 15176733539 &amp;nbsp;m15176733539@163.com 本人有严谨的工作态度与高质量意识；能查阅各种开发技术手册，具有独立解决问题的能力。具备扎实的Java基础和四年开发经验，有良好的编</description>
    </item>
    <item>
      <title>Java定时任务可视化管理</title>
      <link>https://blog.lijizhi.website/posts/java/codesimpl/scheduled-job/</link>
      <pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/codesimpl/scheduled-job/</guid>
      <description>代码结构 pom依赖 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-security&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-quartz&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; 库表结构 -- ---------------------------- -- 定时任务调度表 -- ---------------------------- drop table if exists sys_job; create table sys_job ( job_id bigint(20) not null auto_increment comment &amp;#39;任务ID&amp;#39;, job_name varchar(64) default &amp;#39;&amp;#39; comment</description>
    </item>
    <item>
      <title>SpringBoot整合Nacos</title>
      <link>https://blog.lijizhi.website/posts/java/spring/springboot-nacos/</link>
      <pubDate>Mon, 04 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/springboot-nacos/</guid>
      <description>Nacos安装启动 一键傻瓜试安装即可，官网写的很清楚这里不在赘述。 这里以Window环境安装为例。 启动Nacos将模式改为单机模式。 启动成功 Nacos相关配置 demo-dev.yaml</description>
    </item>
    <item>
      <title>Java整合文件上传功能</title>
      <link>https://blog.lijizhi.website/posts/java/codesimpl/uploadfile-code/</link>
      <pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/codesimpl/uploadfile-code/</guid>
      <description>结构 pom.xml fastdfs-client-java-1.27.jar 点击下载 &amp;lt;dependencies&amp;gt; &amp;lt;!-- fastdfs --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.csource&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;fastdfs-client-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.27&amp;lt;/version&amp;gt; &amp;lt;systemPath&amp;gt;${project.basedir}/lib/fastdfs-client-java-1.27.jar&amp;lt;/systemPath&amp;gt; &amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!--aliyun oss 依赖--&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.aliyun.oss&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;aliyun-sdk-oss&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.8.11&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;commons-io&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-io&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.11.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; application.yml server: port: 80 公共部分 FileManagement public interface FileManagement { /** * 设置下一个be</description>
    </item>
    <item>
      <title>Java整合支付功能</title>
      <link>https://blog.lijizhi.website/posts/java/codesimpl/pay-code/</link>
      <pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/codesimpl/pay-code/</guid>
      <description>结构 完整代码：https://gitee.com/gitee_pikaqiu/easy-archetype pom.xml &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;hutool-all&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;5.8.11&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.alipay.sdk&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;alipay-sdk-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;4.9.9&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt;</description>
    </item>
    <item>
      <title>SpringBoot整合Validator</title>
      <link>https://blog.lijizhi.website/posts/java/spring/springboot-validator/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/springboot-validator/</guid>
      <description>常见参数校验 在日常的接口开发中，为了防止非法参数对业务造成影响，经常需要对接口的参数做校验。最简单就是用if条件语句来判断，但是随着参数越来越多，业务越来越复杂</description>
    </item>
    <item>
      <title>Java管道流设计模式结合业务</title>
      <link>https://blog.lijizhi.website/posts/java/codesimpl/pipeline-business/</link>
      <pubDate>Thu, 15 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/codesimpl/pipeline-business/</guid>
      <description>流程图 代码实现 完整代码：https://gitee.com/gitee_pikaqiu/easy-pipeline pom &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.plugin&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-plugin-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${spring.plugin.core.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-test&amp;lt;/artifactId&amp;gt; &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.projectlombok&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;lombok&amp;lt;/artifactId&amp;gt; &amp;lt;optional&amp;gt;true&amp;lt;/optional&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;cn.hutool&amp;lt;/groupId&amp;gt;</description>
    </item>
    <item>
      <title>如何重构一个程序</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/java-project-reconstitution/</link>
      <pubDate>Thu, 20 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/java-project-reconstitution/</guid>
      <description>什么是重构 摘自《重构：改善既有代码的设计》 重构(名词形式): 对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。 重构</description>
    </item>
    <item>
      <title>SpringMVC与SpringWebFlux</title>
      <link>https://blog.lijizhi.website/posts/java/spring/java-spring-mvc-webflux/</link>
      <pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/java-spring-mvc-webflux/</guid>
      <description>SpringMVC SpringWebMVC是建立在Servlet API上的原始Web框架，从一开始就包含在Spring框架中。正式名称 &amp;ldquo;Spring Web MVC &amp;ldquo;来自其源模块的名称（s</description>
    </item>
    <item>
      <title>分布式ID详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/distributed-id/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/distributed-id/</guid>
      <description>分布式ID 在我们业务数据量不大的时候，单库单表完全可以支撑现有业务，数据再大一点搞个MySQL主从同步读写分离也能对付。 但随着数据日渐增长，主从同步也扛不住了，</description>
    </item>
    <item>
      <title>如何减少及解决bug思路</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/handle-bugs/</link>
      <pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/handle-bugs/</guid>
      <description>bug的起源: 1945年，一只小飞蛾钻进了计算机电路里，导致系统无法工作，一位名叫格蕾丝·赫柏的人把飞蛾拍死在工作日志上，写道：就是这个 bug(虫子)，害我们今</description>
    </item>
    <item>
      <title>Elasticsearch详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-elasticsearch/</link>
      <pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-elasticsearch/</guid>
      <description>概览 Elasticsearch简称为ES，它是一个开源的高扩展的分布式全文搜索引擎，是整个ElasticStack技术栈的核心。 它可以近乎实时的存储、检索数据，</description>
    </item>
    <item>
      <title>IDEA常用插件及使用技巧</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/dev-idea/</link>
      <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/dev-idea/</guid>
      <description>下载 工欲善其事必先利其器，一个好的开发工具，能极大提高开发效率。IDEA新UI很漂亮，IDEA 官方下载地址： https://www.jetbrains.com/zh-cn/idea/download/other.html 。 下载完之后激活，激活工具百度云下载，链接： https://pan.baidu.com/s/1bmktlKMWC6nIqgJNSUYx_A?pwd=8888 。D</description>
    </item>
    <item>
      <title>如何写出整洁的代码</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/clean-code/</link>
      <pubDate>Thu, 01 Sep 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/clean-code/</guid>
      <description>为什么要写整洁的代码 内容节选自《代码整洁之道》，有改动。 为什么我们需要写整洁的代码？在回答这个问题之前，也许我们应该先思考一下为什么代码会变得糟糕。 是因为想要快</description>
    </item>
    <item>
      <title>简要概述如何做好程序设计</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/java-design/</link>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/java-design/</guid>
      <description>数据库设计 表结构设计：确保表和字段的设计符合业务需求，避免重复数据和不必要的复杂性。 表的关联关系：检查表之间的关系，如外键，确保它们符合业务规则，并能支持常见的</description>
    </item>
    <item>
      <title>Java20220422简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20220422/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20220422/</guid>
      <description>自我介绍 1998 · 李济芝 河北唐山 15176733539 &amp;nbsp;m15176733539@163.com 本人有严谨的工作态度与高质量意识；能查阅各种开发技术手册，具有独立解决问题的能力。具备扎实的Java基础和三年开发经验，有良好的编</description>
    </item>
    <item>
      <title>Java小程序集合</title>
      <link>https://blog.lijizhi.website/posts/java/codesimpl/java-multi-gadget/</link>
      <pubDate>Sat, 09 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/codesimpl/java-multi-gadget/</guid>
      <description>写在前面 本文中所涉及的程序均为Java开发，如果您想要直接使用这些工具需要提前配置Java环境。所涉及到的程序均提供完整代码，有兴趣可以尝试运行。 程序使用jav</description>
    </item>
    <item>
      <title>如何从代码层面避免内存泄漏</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/java-code-memoryleak/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/java-code-memoryleak/</guid>
      <description>概述 内存泄漏是指不使用的对象持续占有内存使得内存得不到释放，从而造成内存空间的浪费。 内存泄露最明显问题是频繁GC，从而STW次数增加，导致用户体验变差。如果内存</description>
    </item>
    <item>
      <title>如何写出优雅的代码</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/java-code-if-else/</link>
      <pubDate>Thu, 25 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/java-code-if-else/</guid>
      <description>概述 优雅的代码就是那种看起来简单、易懂，而且好维护的代码。它的设计让人一眼就能明白每部分的作用，避免了复杂和冗余的部分。 它使用清晰的变量和方法名称，能让你很快理</description>
    </item>
    <item>
      <title>Kafka详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-kafka/</link>
      <pubDate>Tue, 19 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-kafka/</guid>
      <description>JMS消息模型 JMS即Java Message Service是Java平台的消息传递标准，用于实现消息中间件的通信。JMS提供了两种消息模型：点对点模型和发布订阅模型。 点对点</description>
    </item>
    <item>
      <title>Java集合</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-java-container/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-java-container/</guid>
      <description>概述 Java中的集合主要包括Collection和Map两种，Collection存储着对象的集合，而Map存储着键值对的映射表。 数组 如果你看过ArrayLis</description>
    </item>
    <item>
      <title>Java反射</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-reflect/</link>
      <pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-reflect/</guid>
      <description>概述 在Java程序运行状态中，对于任意一个实体类，都能够知道这个类的所有属性和方法，对于任意一个对象，都能够调用它的任意方法和属性。这种动态获取信息以及动态调用</description>
    </item>
    <item>
      <title>Java程序的故障排查</title>
      <link>https://blog.lijizhi.website/posts/java/programguide/java-problem-command-tools/</link>
      <pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/programguide/java-problem-command-tools/</guid>
      <description>Linux命令 由于大多数Java程序部署到Linux服务器上，故障排查和性能调优通常需要结合使用Linux命令。 Linux命令，可以实时查看系统的CPU、内存、</description>
    </item>
    <item>
      <title>分布式事务详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/distributed-transaction/</link>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/distributed-transaction/</guid>
      <description>概览 什么是事务？举个例子，你去超市买东西，&amp;ldquo;一手交钱，一手交货&amp;quot;就是一个事务的例子。 交钱和交货必须同时成功，事务才算成功，其中有一个环节失</description>
    </item>
    <item>
      <title>JavaObject类方法</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-objectclass-methods/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-objectclass-methods/</guid>
      <description>概览 Object类位于java.lang包中，编译时会自动导入。当我们创建一个类时，如果没有明确继承一个父类，那么它就会自动继承Object，成为Object的</description>
    </item>
    <item>
      <title>微服务治理详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/small-service/</link>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/small-service/</guid>
      <description>什么是微服务架构 In short， the microservice architectural style is an approach to developing a single application as a suite of small services，each running in its own process and communicating with lightweight mechanisms， often an HTTP resource API。 These services are built around business capabilities</description>
    </item>
    <item>
      <title>Redis详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-redis/</link>
      <pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-redis/</guid>
      <description>概述 Redis全称Remote Dictionary Server，是一个开源的使用ANSI C语言编写、遵守BSD协议、支持网络、可基于内存亦可持久化的日志型、Key-Value数据</description>
    </item>
    <item>
      <title>Spring详解</title>
      <link>https://blog.lijizhi.website/posts/java/spring/java-spring/</link>
      <pubDate>Thu, 13 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/java-spring/</guid>
      <description>概览 Spring是一个轻量级的Java开源框架，是为了解决企业应用开发的复杂性而创建的。Spring的核心是控制反转（IOC）和面向切面（AOP）。 IOC叫控制</description>
    </item>
    <item>
      <title>JVM中的垃圾回收器</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/java-garbage-collector/</link>
      <pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/java-garbage-collector/</guid>
      <description>如果说收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。 虽然我们对各个收集器进行比较，但并非要挑选出一个最好的收集器。 因为直到现在为止还没有最好</description>
    </item>
    <item>
      <title>Java多线程</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-multi-thread/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-multi-thread/</guid>
      <description>线程与进程 进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。一个正在运行的程序的实例就是一个进程。 线程是操作系统能够进行运算调度的最小单位。它被包</description>
    </item>
    <item>
      <title>HashMap详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-hashmap/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-hashmap/</guid>
      <description>HashMap HashMap是一个散列表，它存储的内容是键值对(key-value)映射。 HashMap实现了Map接口，根据键的HashCode值存储数据，具有很快的访问</description>
    </item>
    <item>
      <title>JVM中的一些概念</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-about/</link>
      <pubDate>Tue, 27 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-about/</guid>
      <description>内存溢出 内存溢出(Out Of Memory，简称OOM)是指应用系统中存在无法回收的内存或使用的内存过多，最终使得程序运行要用到的内存大于能提供的最大内存。 官方文档</description>
    </item>
    <item>
      <title>面试中常见的问题</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-questions-and-answers/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-questions-and-answers/</guid>
      <description>自我介绍 个人经历可以进行适当包装，但是不能造假，一方面如果一旦被人拆穿，后果就不用我说了吧，另一方面如果你说谎，说了一些你自己不感兴趣的项目，在入职之后可能会被</description>
    </item>
    <item>
      <title>职场中如何正确提出辞职</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/correct-resign/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/correct-resign/</guid>
      <description>如何正确提出辞职 辞职的时候不要给公司埋雷，当然也不要被公司薅最后一把羊毛。正所谓害人之心不可有，防人之心不可无。 如果你在一个公司实在是工作不下去了，请不要忍气吞</description>
    </item>
    <item>
      <title>JVM中的垃圾回收机制</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/java-garbage-collection/</link>
      <pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/java-garbage-collection/</guid>
      <description>什么是垃圾 垃圾回收（Garbage Collection，GC），顾名思义就是释放垃圾占用的空间，防止内存爆掉。有效的使用可以使用的内存，对内存堆中已经死亡的或者</description>
    </item>
    <item>
      <title>JVM中的执行引擎</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-execute-engine/</link>
      <pubDate>Thu, 15 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-execute-engine/</guid>
      <description>概述 执行引擎是Java虚拟机核心的组成部分之一，属于JVM的下层，里面包括 解释器、及时编译器、垃圾回收器。 “虚拟机”是一个相对于“物理机”的概念，这两种机器都有</description>
    </item>
    <item>
      <title>JVM中的直接内存</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-direct-memory/</link>
      <pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-direct-memory/</guid>
      <description>直接内存不是虚拟机运行时数据区的一部分，也不是《Java虚拟机规范》中定义的内存区域。直接内存是在Java堆外的、直接向系统申请的内存区间。 而且也可能导致Out</description>
    </item>
    <item>
      <title>从JVM角度理解Java对象</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-object/</link>
      <pubDate>Mon, 12 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-object/</guid>
      <description>对象的创建方式 常见的有五种创建对象方式： 使用new关键字创建；使用new关键字创建对象是最常见的方式，直接调用类的构造方法，优点是语法简单直观，执行效率高，适用</description>
    </item>
    <item>
      <title>JavaIO</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-io/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-io/</guid>
      <description>概览 IO，即in和out的缩写，也就是输入和输出，指应用程序和外部设备之间的数据传递，常见的外部设备包括文件、管道、网络连接。 从计算机结构的角度来看IO，IO就</description>
    </item>
    <item>
      <title>Netty详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-netty/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-netty/</guid>
      <description>概述 Netty是一个高性能、异步的网络应用框架，用于开发高效的网络通信程序。它是Java NIO的一个抽象，简化了网络编程的复杂性，并提供了一系列高级功能，使网络</description>
    </item>
    <item>
      <title>JVM中的方法区</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-method-area/</link>
      <pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-method-area/</guid>
      <description>Java虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机启动而创建，随着虚拟机退出而销毁。 另外一些则是与线程一一对应的，这些与线程对</description>
    </item>
    <item>
      <title>JVM中的堆</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-heap/</link>
      <pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-heap/</guid>
      <description>Java虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机启动而创建，随着虚拟机退出而销毁。 另外一些则是与线程一一对应的，这些与线程对</description>
    </item>
    <item>
      <title>JVM中的本地方法接口</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-native-interface/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-native-interface/</guid>
      <description>概念 简单地讲，一个Native Method是一个Java调用非Java代码的接囗。一个Native Method该方法的实现由非Java语言实现，比如C。 这个特征</description>
    </item>
    <item>
      <title>JVM中的本地方法栈</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-native-stack/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-native-stack/</guid>
      <description>Java虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机启动而创建，随着虚拟机退出而销毁。 另外一些则是与线程一一对应的，这些与线程对</description>
    </item>
    <item>
      <title>JVM中的虚拟机栈</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-stack/</link>
      <pubDate>Sun, 28 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-stack/</guid>
      <description>Java虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机启动而创建，随着虚拟机退出而销毁。 另外一些则是与线程一一对应的，这些与线程对</description>
    </item>
    <item>
      <title>JVM中的程序计数寄存器</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-pc-register/</link>
      <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-pc-register/</guid>
      <description>Java虚拟机定义了若干种程序运行期间会使用到的运行时数据区，其中有一些会随着虚拟机启动而创建，随着虚拟机退出而销毁。 另外一些则是与线程一一对应的，这些与线程对</description>
    </item>
    <item>
      <title>JVM介绍</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-start/</link>
      <pubDate>Fri, 05 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-start/</guid>
      <description>为什么要学习JVM 大部分Java开发人员，除了会在项目中使用到与Java平台相关的各种高精尖技术，对于Java技术的核心Java虚拟机了解甚少。 一些有一定工作经</description>
    </item>
    <item>
      <title>Nginx入门</title>
      <link>https://blog.lijizhi.website/posts/java/toolsintro/nginx-start/</link>
      <pubDate>Thu, 04 Mar 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/toolsintro/nginx-start/</guid>
      <description>概述 Nginx是一个高性能的Web服务器和反向代理服务器，特点是占有内存少，并发能力强，Nginx的并发能力确实在同类型的网页服务器中表现较好。 Nginx专为性</description>
    </item>
    <item>
      <title>Java面向对象</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-object-oriented/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-object-oriented/</guid>
      <description>概览 面向对象简称OO(object-oriented)是相对面向过程(procedure-oriented)来说的，是一种编程思想，Java就是一门面向对象的语</description>
    </item>
    <item>
      <title>Java类加载机制</title>
      <link>https://blog.lijizhi.website/posts/java/jvm/jvm-classloader/</link>
      <pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/jvm/jvm-classloader/</guid>
      <description>类加载过程 在Java中，类加载器把一个class装入JVM中，要经过以下步骤： 加载、验证、准备、解析和初始化。其中验证，准备，解析统称为连接。 这5个阶段一般是顺</description>
    </item>
    <item>
      <title>Java运算</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-operation/</link>
      <pubDate>Sat, 30 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-operation/</guid>
      <description>运算符与表达式 运算符 运算符指明对操作数的运算方式。组成表达式的Java操作符有很多种。 运算符按照其要求的操作数数目来分，可以有单目运算符、双目运算符和三目运算符</description>
    </item>
    <item>
      <title>Java数据类型</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-datatype/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-datatype/</guid>
      <description>基本类型 Java语言提供了八种基本类型。六种数值类型（四个整数型，两个浮点型），一种字符类型，还有一种布尔型，俗称4类8种。 这里只介绍称4类8种，实际上，Jav</description>
    </item>
    <item>
      <title>Java异常</title>
      <link>https://blog.lijizhi.website/posts/java/javabasics/rookie-exception/</link>
      <pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javabasics/rookie-exception/</guid>
      <description>异常类型 Throwable可以用来表示任何可以作为异常抛出的类，分为两种：Error 和 Exception。 其中Error用来表示Java程序无法处理的错误，这类</description>
    </item>
    <item>
      <title>Java20201124简历</title>
      <link>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20201124/</link>
      <pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaemp/interview-resume-20201124/</guid>
      <description>自我介绍 1998 · 李济芝 河北唐山 15176733539 &amp;nbsp;m15176733539@163.com 专业技能 熟练使用 SSM,SpringBoot等框架技术; 熟练使用HTML,CSS等相关技术; 有Redis,Vue相关使用经验; 有对</description>
    </item>
    <item>
      <title>SpringBoot整合Docker</title>
      <link>https://blog.lijizhi.website/posts/java/spring/springboot-docker/</link>
      <pubDate>Sun, 30 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/springboot-docker/</guid>
      <description>Linux上安装Docker 2017年的3月1号之后，Docker的版本命名开始发生变化，同时将CE版本和EE版本进行分开。 Docker社区版（CE）：为了开发</description>
    </item>
    <item>
      <title>SpringBoot整合Kafka</title>
      <link>https://blog.lijizhi.website/posts/java/spring/springboot-kafka/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/springboot-kafka/</guid>
      <description>Docker安装和运行Kafka 获取Kafka Docker镜像。使用wurstmeister/kafka镜像，它包含了Kafka和Zookeeper。 docker pull wurstmeister/kafka 创建</description>
    </item>
    <item>
      <title>线程创建方式</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/thread-created-way/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/thread-created-way/</guid>
      <description>创建线程 在Java中创建一个线程，有且仅有一种方式，创建一个Thread类实例，并调用它的start方法。 Thread 最经典也是最常见的方式是通过继承Thread类，重写</description>
    </item>
    <item>
      <title>Docker入门</title>
      <link>https://blog.lijizhi.website/posts/java/toolsintro/docker-start/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/toolsintro/docker-start/</guid>
      <description>概述 Docker属于Linux容器的一种封装，提供简单易用的容器使用接口。它是目前流行的Linux容器解决方案。Docker将应用程序与该程序的依赖，打包在一个</description>
    </item>
    <item>
      <title>Java中的锁都有什么</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-locks/</link>
      <pubDate>Tue, 07 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-locks/</guid>
      <description>锁 在Java中根据锁的特性来划分可以分为很多，锁的主要作用是确保多线程环境下的数据安全，从而保证程序的正确执行。 在Java中具体&amp;quot;锁&amp;quot;的实现</description>
    </item>
    <item>
      <title>Java中常用线程安全的集合</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/java-thread-collection/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/java-thread-collection/</guid>
      <description>Java中常用线程安全的集合 在多线程环境中，数据的一致性和线程的安全性是至关重要的。传统的集合类，如ArrayList、HashMap和HashSet，在并发访</description>
    </item>
    <item>
      <title>CAS详解</title>
      <link>https://blog.lijizhi.website/posts/java/javaessay/cas-detail/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/javaessay/cas-detail/</guid>
      <description>CAS CAS全称为Compare and Swap被译为比较并交换，是一种无锁算法。用于实现并发编程中的原子操作。CAS操作检查某个变量是否与预期的值相同，如果相同则将其更</description>
    </item>
    <item>
      <title>SpringBoot整合Redis</title>
      <link>https://blog.lijizhi.website/posts/java/spring/springboot-redis/</link>
      <pubDate>Sun, 01 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/springboot-redis/</guid>
      <description>Docker安装和运行Redis 首先从Docker Hub拉取Redis的官方镜像。 docker pull redis:latest 使用docker run命令启动Redis容器。 docker run -d --name redis -p 6379:6379 redis:latest 验证Red</description>
    </item>
    <item>
      <title>SpringBoot整合Elasticsearch</title>
      <link>https://blog.lijizhi.website/posts/java/spring/springboot-elasticsearch/</link>
      <pubDate>Sun, 09 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/java/spring/springboot-elasticsearch/</guid>
      <description>Docker安装和运行Elasticsearch 拉取Elasticsearch Docker镜像。从Docker Hub拉取Elasticsearch的官方镜像。 docker</description>
    </item>
    <item>
      <title>2019工作总结</title>
      <link>https://blog.lijizhi.website/posts/worksummary/work-summary-2019/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/worksummary/work-summary-2019/</guid>
      <description>本人在进入公司起,期间一直对自己要求严谨,遵守公司的相应制度. 在过去的一个月时间里,我参与了贵州银行的电子验印系统的开发,一直努力完成和完善分配给我的任务,在这</description>
    </item>
    <item>
      <title>Vue2.0基础入门笔记</title>
      <link>https://blog.lijizhi.website/posts/essays/vue2-note/</link>
      <pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/essays/vue2-note/</guid>
      <description>参考资料 代码中的依赖库：Vue2.x-lib.zip Vue官方文档：https://cn.vuejs.org/v2/guide Vue参考视频资料：https:/</description>
    </item>
    <item>
      <title>Js雪花飘落</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-snow/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-snow/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;snow&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;style&amp;gt; html { width: 100%; } body { margin: 0; padding: 0; overflow-y: hidden; width: 100%; } .header { width: 100%; height: 315px; background: url(&amp;#34;images/header-bg.png&amp;#34;) repeat; } .snow { position: relative; height: inherit; width: 960px; background: url(&amp;#34;images/con-bg.png&amp;#34;) no-repeat 0 204px, url(&amp;#34;images/snow-bg.png&amp;#34;) no-repeat 0 0;; margin: 0 auto; animation: auto 10s linear infinite; } /* 下雪动画 插入两个背景图片*/ @keyframes auto</description>
    </item>
    <item>
      <title>Js下雨特效</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-rain/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-rain/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt; rain &amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; html { width: 100%; } body { width: 100%; margin: 0; padding: 0; background-color: #000; } .rain { display: block; } embed { display: block; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;!-- 2、使用hidden=&amp;#34;true&amp;#34;表示隐藏音乐播放按钮，相反</description>
    </item>
    <item>
      <title>Js换肤特效</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-trans-skin/</link>
      <pubDate>Wed, 14 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-trans-skin/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;换肤特效&amp;lt;/title&amp;gt; &amp;lt;style type=&amp;#34;text/css&amp;#34;&amp;gt; body { margin: 0; background-image: url(&amp;#34;images/1.jpg&amp;#34;); background-size: cover; } ul { margin: 0; padding: 0; list-style-type: none; } .bg-list { display: none; margin: 0; width: 100%; height: 200px; background: rgba(0, 0, 0, 0.5); } .img-wrap { height: 200px; display:</description>
    </item>
    <item>
      <title>Js折纸导航栏</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-paper-folding/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-paper-folding/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;折纸导航栏&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;style&amp;gt; *{ margin: 0; padding: 0; } .content{ position: relative; width: 400px; height: 30px; margin: 50px auto; /*-webkit-perspective: 1000px; -moz-perspective: 1000px; -ms-perspective: 1000px;*/ perspective: 1000px;/*景深相当于眼</description>
    </item>
    <item>
      <title>Js表白神器</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-love-heart/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-love-heart/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;love&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; *{ margin: 0; padding: 0; } body{ background-color: #000; background-size: cover; overflow-y: hidden; } .love{ width: 400px; height: 400px; /*background-color: #7c7c7c;*/ margin: 130px auto; animation: move 1s infinite alternate; } @keyframes move { 100%{ transform: scale(1.5); } } .left{ float: left; width: 150px; height: 250px; background-color: #FF0000; border-radius: 75px 75px 0 5px; -webkit-transform: rotate(-45deg); -moz-transform: rotate(-45deg); -ms-transform: rotate(-45deg); -o-transform: rotate(-45deg); transform: rotate(-45deg); margin-left: 85px; box-shadow: 0 0 20px #FF0000; animation:</description>
    </item>
    <item>
      <title>Js懒加载</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-loadding-lazy/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-loadding-lazy/</guid>
      <description>index.html &amp;lt;!doctype html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;Generator&amp;#34; content=&amp;#34;EditPlus®&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;Author&amp;#34; content=&amp;#34;&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;Keywords&amp;#34; content=&amp;#34;&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;Description&amp;#34; content=&amp;#34;&amp;#34;&amp;gt; &amp;lt;title&amp;gt;懒加载技术&amp;lt;/title&amp;g</description>
    </item>
    <item>
      <title>Js五子棋</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-gomoku/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-gomoku/</guid>
      <description>index.html &amp;lt;!DOCTYPE html PUBLIC &amp;#34;-//W3C//DTD XHTML 1.0 Transitional//EN&amp;#34; &amp;#34;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&amp;#34;&amp;gt; &amp;lt;html xmlns=&amp;#34;http://www.w3.org/1999/xhtml&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;五子棋&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;device-width; initial-scale=1.0;&amp;#34; /&amp;gt; &amp;lt;style&amp;gt; #c1 { display: block; margin: 60px auto; box-shadow: 1px 1px 5px #000000; } &amp;lt;/style&amp;gt; &amp;lt;script src=&amp;#34;js/index.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;canvas id=&amp;#34;c1&amp;#34; width=&amp;#34;450px&amp;#34; height=&amp;#34;450px&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; index.js window.onload =</description>
    </item>
    <item>
      <title>Js滑块拖拽</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-box-drag/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-box-drag/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;滑块拖拽&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;style&amp;gt; body { margin: 0; padding: 0; user-select: none; } .content { position: relative; width: 300px; height: 40px; margin: 50px auto; background-color: #E8E8EB; text-align: center; line-height: 40px; } .rect { position: absolute; width: 100%; height: 100%; } .rect .bg {</description>
    </item>
    <item>
      <title>Js生日礼物</title>
      <link>https://blog.lijizhi.website/posts/jscodes/js-birthday-gift/</link>
      <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://blog.lijizhi.website/posts/jscodes/js-birthday-gift/</guid>
      <description>index.html &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;title&amp;gt;card&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; body,html{ width: 100%; height: 100%; } body{ display: flex;/*弹性盒模型*/ justify-content: center;/*水平对齐 盒子位于中心*/ align-items: center;/*竖直对齐 居中对齐*/ background-color: yellow; perspective: 100</description>
    </item>
  </channel>
</rss>
