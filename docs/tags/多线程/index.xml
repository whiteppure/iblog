<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>多线程 on 脚踏实地</title>
    <link>https://whiteppure.github.io/iblog/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
    <description>Recent content in 多线程 on 脚踏实地</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Thu, 11 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://whiteppure.github.io/iblog/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>synchronized关键字</title>
      <link>https://whiteppure.github.io/iblog/posts/javakeyword/java-keyword-synchronized/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://whiteppure.github.io/iblog/posts/javakeyword/java-keyword-synchronized/</guid>
      <description>synchronized synchronized是Java提供的关键字译为同步，是Java中用于实现线程同步的一种机制。它可以确保在同一时间只有一个线程能够执行某段代码，从而避免线程</description>
    </item>
    <item>
      <title>volatile关键字</title>
      <link>https://whiteppure.github.io/iblog/posts/javakeyword/java-keyword-volatile/</link>
      <pubDate>Thu, 11 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://whiteppure.github.io/iblog/posts/javakeyword/java-keyword-volatile/</guid>
      <description>volatile volatile通常被比喻成轻量级的锁，是Java并发编程中比较重要的一个关键字。volatile作用： 可见性：当一个线程修改了 volatile 变量的值，新的值对于其他线程</description>
    </item>
    <item>
      <title>Java多线程</title>
      <link>https://whiteppure.github.io/iblog/posts/javabasics/rookie-multi-thread/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      <guid>https://whiteppure.github.io/iblog/posts/javabasics/rookie-multi-thread/</guid>
      <description>线程与进程 进程是一个具有一定独立功能的程序关于某个数据集合的一次运行活动。一个正在运行的程序的实例就是一个进程。 线程是操作系统能够进行运算调度的最小单位。它被包</description>
    </item>
    <item>
      <title>CAS详解</title>
      <link>https://whiteppure.github.io/iblog/posts/detailed/cas-detail/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://whiteppure.github.io/iblog/posts/detailed/cas-detail/</guid>
      <description>CAS CAS全称为Compare and Swap被译为比较并交换，是一种无锁算法。用于实现并发编程中的原子操作。CAS操作检查某个变量是否与预期的值相同，如果相同则将其更</description>
    </item>
  </channel>
</rss>
